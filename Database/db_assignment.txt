//1.user on boarding 
const UserSchema = new mongoose.Schema({
 name: {
 type: String,
 required: true
 },
 email: {
 type: String,
 required: true,
 unique: true
 },
 password: {
 type: String,
 required: true
},
});

//2. session management

const SessionSchema = new mongoose.Schema({
 userId: {
 type: mongoose.Schema.Types.ObjectId,
 ref: 'User',
 required: true
 },
 token: {
 type: String,
 required: true
 },
 expiresAt: {
 type: Date,
 required: true
 },
 // Other session-related fields
});


//3. post

const PostSchema = new mongoose.Schema({
 userId: {
 type: mongoose.Schema.Types.ObjectId,
 ref: 'User',
 required: true
 },
 content: {
 type: String,
 required: true
},
createdAt: {
type: Date,
default: Date.now
},
// Other post-related fields
});

//4. action---> comment,like

const CommentSchema = new mongoose.Schema({
 postId: {
 type: mongoose.Schema.Types.ObjectId,
 ref: 'Post',
 required: true
},
 userId: {
type: mongoose.Schema.Types.ObjectId,
ref: 'User',
 required: true
 },
 content: {
 type: String,
required: true
},
 createdAt: {
 type: Date,
default: Date.now
},
// Other comment-related fields
});
